---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        name: nginx-ingress-lb
        app: ingress-nginx
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: nginx-ingress-serviceaccount
      hostNetwork: true
      containers:
      - image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.22.0
        name: nginx-ingress-controller
        imagePullPolicy: Always
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-ingress-conf
        - --annotations-prefix=nginx.ingress.kubernetes.io
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx
        resources:
          requests:
            memory: "250Mi"
            cpu: "100m"
          limits:
            memory: "250Mi"
            cpu: "100m"
        securityContext:
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
          runAsUser: 33
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443